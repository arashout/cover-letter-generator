use std::collections::HashMap;

use crate::types::{BlurbVec, Blurb, KeywordGroup};

lazy_static! {
    pub static ref KEYWORDS_GROUP_MAP: HashMap<&'static str, KeywordGroup<'static>> = {
        let m = hashmap! {
        "frontend" => KeywordGroup{ score: 3, trigger_tokens: vec!["react", "reactjs", "angular", "angularjs", "vue"]},
        "favourite_languages" => KeywordGroup {score: 5, trigger_tokens: vec!["rust", "typescript"]},
        "dotnet" => KeywordGroup{ score: 4, trigger_tokens: vec!["c#", "net", "dotnet"]},
        "rust" => KeywordGroup{ score: 5, trigger_tokens: vec!["rust"]},
        "golang" => KeywordGroup{ score: 2, trigger_tokens: vec!["golang"]},
        "microservices" => KeywordGroup{ score: 3, trigger_tokens: vec!["microservices"]},
        "python" => KeywordGroup{ score: 5, trigger_tokens: vec!["python", "flask"]}
        };
        m
    };
}

// TODO: Move this to yaml
lazy_static! {
    pub static ref BLURBS: BlurbVec<'static> = {
        let mut v = Vec::new();
        // TODO: Code for replacing company and position
        v.push(
            Blurb::new("intro")
                .with_precedence(255)
                .with_description("Hey I'm Ash,\
                \nA new grad from UBC with experience building APIs and client facing dashboard while at Ravelin.\
                I'm interested in the {POSITION} and below are a couple reasons I would be good fit:")
        );
        v.push(
            Blurb::new("typescript")
                .with_tokens(vec!["angular", "angularjs", "typescript"])
                .with_description("I have had the pleasure of building Ravelin's customer facing dashboard using AngularJS and TypeScript for year.
                TypeScript is one of my favorite languages as it has made working with large complex JavaScript applications much more ergonomic!")
             );
                v.push(
            Blurb::new("react")
                .with_tokens(vec!["react", "reactjs", "typescript"])
                .with_description("I built chrome extension for the sales team using React+TypeScript for prospecting clients that they \
                use everyday.\
                \nWith the same tech stack I built card matching game to help adults learn the sounds of the English alphabet;\
                which my grandma uses to practice <3")
                .with_long_description("I built chrome extension for the sales team using React+TypeScript for prospecting clients that they \
                use everyday. This project was a favor for a co-worker and purely my own initiative but it ended up being used by everyone on sales.\
                \nUsing the same tech stack I built my grandma a card matching game for learning the sounds of the English alphabet <3")
                );
        v.push(
            Blurb::new("micro-go")
            .with_tokens(vec!["golang", "microservices"])
            .with_description("Familiar with the microservices archeticture and associated technologies like Docker since \
                at Ravelin built and tested new API endpoints and backend functionality with Go."
            ));
        v.push(
            Blurb::new("sdet")
            .with_tokens(vec!["selenium","cypress", "phantamjs", "scraping"])
            .with_description("I'm particularly obsessed with automation, so much so that I built a robot to apply to jobs for me using \
                Selenium. Thus I have a significant amount of experience automating web browsers which will come in handy for automated testing."
            ));
        v.push(
            Blurb::new("rust")
            .with_tokens(vec!["rust"])
            .with_description("I've recently gotten interested in Rust and regularly attend a Rust meet-up in Vancouver.
                In fact this message was generated by a small Rust console application!"
)
        );
        v.push(
            Blurb::new("vis")
            .with_tokens(vec!["visualization", "graph", "algorithms"])
            .with_description("I worked extensively on the Ravelin Connect product, which involved building graph visualizations using \
                D3.js and implementing algorithms for efficient graph processing."
            )
        );
        v.push(
            Blurb::new("linux")
                .with_tokens(vec!["linux", "unix"])
                .with_precedence(1)
                .with_description("Ubuntu is my daily driver so proficiency in a linux environment is not a problem.")
        );
        v.push(
            Blurb::new("outro")
                .with_precedence(1)
                .with_description("This seems like an incredible opportunity so please do not hesitate to arrange an interview or ask any questions!"
                )
        );
        v
    };
}
